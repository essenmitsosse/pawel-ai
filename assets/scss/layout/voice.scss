.voice-wrap {
	position: fixed;
	top     : $voice-top;
	left    : $voice-side;
	width   : $voice-width;
	height  : $voice-height;
	z-index : 20000;
	display : none;
}

#voice-2 {
	left : auto;
	right: $voice-side;
}

.voice-box {
	position        : absolute;
	width           : 100%;
	height          : 100%;
	background-color: $background-color;
	border-radius   : 5vw;
	border          : 3px solid $font-color;
	display         : none;
	box-sizing      : content-box;
}

.voice-dot {
	@include transform( scale( 0 ) );
	@include transition( transform .5s );

	position      : absolute;
	width         : $dot-size;
	height        : 0;
	padding-bottom: $dot-size;
	top           : ( 100% - $dot-size / $voice-ratio ) / 2;
	box-sizing    : content-box;

	.speaking & {
		@include transform( scale( 1 ) );
	}

	.voice-dot-inner {
		@include animation( voice $voice-duration infinite );
		width           : 100%;
		height          : 100%;
		position        : absolute;
		background-color: $font-color;
		border-radius   : 100%;
	}
}
@mixin voice-scale ( $scale ) {
	transform: scale( $scale );
}
@keyframes voice {
	0% {
		@include voice-scale( $voice-smallest-scale );
	}

	30% {
		@include voice-scale( 1 )
	}

	60% {
		@include voice-scale( $voice-smallest-scale );
	}

	100% {
		@include voice-scale( $voice-smallest-scale );
	}
}

$i: 0;
$dot-count: 5;
$box-rest: ( 100 - $dot-count * $dot-size );
@while ( $i <= $dot-count ) {
	.voice-dot-#{$i + 1} {
		left: ( $box-rest / ( $dot-count + 1 ) ) * ( $i + 1 ) + $dot-size * $i;

		.voice-dot-inner {
			animation-delay: ( $voice-duration / ( $dot-count + 1 ) ) * $i;
		}
	}
	$i: $i + 1;
}
