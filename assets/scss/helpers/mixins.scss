@function calc-pixel-value ( $value ) {
	@return $base-font-size * $base-line-height-rel * $value;
}
@function calc-rem-value ( $value ) {
	@return $value * $base-line-height-rel + rem;
}
@function calc-pixel-value-by-font-size ( $value ) {
	@return $base-font-size * $value;
}
@function calc-rem-value-by-font-size ( $value ) {
	@return $value + rem;
}
@function calc-rem-value-ai ( $value ) {
	@return $ai-line-height * $value;
}
@function calc-rem-value-by-font-size-ai ( $value ) {
	@return $ai-font-size * $value;
}
@mixin get-rem( $value-name, $values: 1, $pixel-function: 'calc-pixel-value', $rem-function: 'calc-rem-value' ) {
	@each $function in ( $rem-function ) {
		$value-list   : (); // create list
		@each $value in $values {
			$value-list: append( $value-list, call( $function, $value ) );
		}
		#{$value-name}: $value-list;
	}
}
@mixin get-font-rem( $value-name, $values: 1 ) {
	@include get-rem( $value-name, $values, 'calc-pixel-value-by-font-size', 'calc-rem-value-by-font-size' );
}
@mixin get-ai-rem( $value-name, $values: 1 ) {
	@include get-rem( $value-name, $values, false, 'calc-rem-value-ai' );
}
@mixin get-ai-font-rem( $value-name, $values: 1 ) {
	@include get-rem( $value-name, $values, false, 'calc-rem-value-by-font-size-ai' );
}
@mixin breakingpoint-by-rem-value( $max-width ) {
	@media ( max-width: #{ call( calc-rem-value, $max-width ) } ) {
		@content;
	}
}
@mixin noselect {
	-webkit-touch-callout: none;
	-webkit-user-select  : none;
	-khtml-user-select   : none;
	-moz-user-select     : none;
	-ms-user-select      : none;
	user-select          : none;
}
@mixin transition( $value ) {
	-webkit-transition: $value;
	-moz-transition   : $value;
	-ms-transition    : $value;
	-o-transition     : $value;
	transition        : $value;
}
@mixin transform($transforms) {
	-moz-transform   : $transforms;
	-o-transform     : $transforms;
	-ms-transform    : $transforms;
	-webkit-transform: $transforms;
	transform        : $transforms;
}
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}
@mixin scale ( $x, $y : false ) {
	@include transform(scale(#{$x}));
}
@mixin filter( $filter ) {
	-webkit-filter: $filter;
	-moz-filter: $filter;
	-ms-filter: $filter;
	-o-filter: $filter;
	filter: $filter;
}
@mixin force-acceleration {
	@include transform( 'translate3d(0,0,0)' );
}
@mixin order( $order ) {
	-moz-box-ordinal-group   : $order;
	-webkit-box-ordinal-group: $order;
	-webkit-order            : $order;
	-ms-flex-order           : $order;
	order                    : $order;
}
@mixin display-flex {
	display: -moz-box;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}
@mixin browser-prefixes( $prop, $value, $use-rem: false ) {
	@if ( $use-rem == true ) {
		@include browser-prefixes( $prop, #{ call( 'calc-pixel-value', $value ) }, false );
		@include browser-prefixes( $prop, #{ call( 'calc-rem-value', $value ) }, false );
	}
	@else {
		-moz-#{$prop}   : $value;
		-ms-#{$prop}    : $value;
		-webkit-#{$prop}: $value;
		#{$prop}        : $value;
	}
}
@mixin flex ( $value ) {
	@include browser-prefixes( 'flex', $value );
}
@mixin flex-direction ( $direction ) {
	@include browser-prefixes( 'flex-direction', $direction );
}
@mixin flex-wrap ( $wrap ) {
	@include browser-prefixes( 'flex-wrap', $wrap );
}
@mixin flex-flow ( $flow ) {
	@include browser-prefixes( 'flex-flow', $flow );
}
@mixin justify-content ( $value ) {
	@include browser-prefixes( 'justify-content', $value );
}
@mixin align-items ( $value ) {
	@include browser-prefixes( 'align-items', $value );
}
@mixin align-content ( $value ) {
	@include browser-prefixes( 'align-content', $value );
}
@mixin order ( $value ) {
	@include browser-prefixes( 'order', $value );
}
@mixin flex-grow ( $value ) {
	@include browser-prefixes( 'flex-grow', $value );
}
@mixin flex-shrink ( $value ) {
	@include browser-prefixes( 'flex-shrink', $value );
}
@mixin flex-basis ( $value, $use-rem: false ) {
	@include browser-prefixes( 'flex-basis', $value, $use-rem );
}
@mixin align-self ( $value ) {
	@include browser-prefixes( 'align-self', $value );
}
@mixin box-orient ( $orient ) {
	@include browser-prefixes( 'box-orient', $orient );
}
@mixin filter ( $value ) {
	-webkit-filter: $value;
	filter: $value;
}
@mixin hyphens ( $value ) {
	-webkit-hyphens: $value;
	-moz-hyphens   : $value;
	-ms-hyphens    : $value;
	hyphens        : $value;
}
@mixin animation ( $value ) {
	-moz-animation   : $value;
	-webkit-animation: $value;
	-o-animation     : $value;
	animation        : $value;
}
